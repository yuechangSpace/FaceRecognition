{"version":3,"sources":["components/Navigation/Navigation.js","components/Navigation/Register.js","components/Navigation/Signin.js","components/Logo/Logo.js","components/Profile/Profile.js","components/TakePic/ImagePreview/index.js","components/TakePic/TakePic.js","components/ImgLinkForm/ImgLinkForm.js","components/Image/Image.js","container/App.js","serviceWorker.js","index.js","components/Logo/image.jpg"],"names":["Navigation","signInNOut","onButtonNav","route","onClick","className","Register","onButtonSign","style","id","name","document","getElementById","value","email","passwd","innerText","fetch","method","headers","body","JSON","stringify","then","res","json","user","register","Signin","props","status","data","joined","entries","signIn","type","Logo","options","max","height","width","borderRadius","alt","src","img","Profile","this","Component","ImagePreview","dataUri","classNameFullscreen","isFullscreen","TakePic","useState","setDataUri","imgDone","setImgDone","onButtonBackHome","onTakePhotoAnimationDone","console","log","obj","base64","onButtonFinishPic","ImgLinkForm","onButtonTakePic","onInput","onButtonSubmit","Image","boundingBox","url","length","top","left","bottom","right","particleParams","Clarifai","App","apiKey","initialState","box","date","Date","setState","state","Obj","pic","calculateBoxPos","top_row","left_col","bottom_row","right_col","querySelector","Number","uri","includes","substring","response","outputs","regions","region_info","bounding_box","displayBox","catch","err","box_arr","event","target","Object","assign","getProfile","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.45f5d3a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onButtonNav, route})=>{\r\n\tlet signInNOut;\r\n\tif (route === 'signedin'){\r\n\t\tsignInNOut = <p onClick={()=>onButtonNav('home')} className='grow mh3'>Sign Out </p>\r\n\t}else{\r\n\t\tsignInNOut = <p onClick={()=>onButtonNav('signin')} className='grow mh3'>Sign In </p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav  className='ma1 pa2 pointer end'>\r\n\t\t<p onClick={()=>onButtonNav('register')} className='grow mh3'>Register</p>\r\n\t\t{signInNOut}\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nconst Register =({onButtonSign,onButtonNav})=>{\r\n\r\n    function register(){\r\n    const name = document.getElementById(\"name\").value;\r\n    const email = document.getElementById(\"email-address\").value;\r\n    const passwd = document.getElementById(\"password\").value;\r\n\r\n    if (name === \"\" || email === \"\" || passwd === \"\") document.getElementById(\"error\").innerText = \"Shouldn't be empty!\";\r\n    else{\r\n      fetch(\"http://localhost:4000/register\",{\r\n        method:\"post\",\r\n        headers:{\r\n          'content-type': 'application/json'\r\n        },\r\n\r\n        body:JSON.stringify({\r\n          \"name\":name,\r\n          \"email\":email,\r\n          \"passwd\":passwd\r\n        })\r\n      })\r\n      .then(res=>res.json())\r\n      .then((user) => {\r\n        if (user[0].id){\r\n          onButtonSign({\r\n            \"name\":name,\r\n            \"email\":email\r\n          });\r\n          onButtonNav('signedin');\r\n        }\r\n        else document.getElementById(\"error\").innerText = \"Email exist!\"\r\n      })\r\n    }\r\n  }\r\n\r\n  return(\r\n  <article className=\"w-50 pa4 black-80 shadow-5 center flex flex-column pl-2\" >\r\n      <h1 >Register</h1>\r\n      <div style={{'color':'red'}}><strong id=\"error\"/></div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw4 lh-copy f6\">User Name</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent measure w-70\" id=\"name\" />\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw4 lh-copy f6\">Email address</label>\r\n        <input className=\"pa2 input-reset ba bg-transparent measure w-70\" id=\"email-address\" />\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw4 lh-copy f6\">Password</label>\r\n        <input className=\"b pa2 input-reset ba bg-transparent w-70\"id=\"password\" />\r\n      </div>\r\n      <div className=\"mt3\">\r\n        <button \r\n        onClick={()=>register()} \r\n        className=\"b ph3 pv2 w-1 input-reset ba b--black bg-transparent grow pointer f6\">Register\r\n        </button>\r\n      </div>\r\n  </article>\r\n  );\r\n}\r\nexport default Register;","import React from 'react';\r\nconst Signin =(props)=>{\r\n\r\n  function signIn(){\r\n    const email = document.getElementById(\"email-address\").value;\r\n    const passwd = document.getElementById(\"password\").value;\r\n    fetch(\"http://localhost:4000/signin\",{\r\n      method:\"post\",\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      },\r\n\r\n      body:JSON.stringify({\r\n        \"email\":email,\r\n        \"passwd\":passwd\r\n      })\r\n    })\r\n     .then(res=>{\r\n          if (res.status===200){\r\n            res.json()\r\n            .then((data) => {\r\n                props.onButtonSign({\r\n                    \"email\":email,\r\n                    \"name\":data.name,\r\n                    \"id\":data.id,\r\n                    \"date\":data.joined,\r\n                    \"entries\":data.entries\r\n                  });\r\n                props.onButtonNav('signedin');\r\n            })\r\n          }else{\r\n            document.getElementById(\"error\").innerText = \"Wrong email or password!\"\r\n          }\r\n      })\r\n  }\r\n\r\n  return(\r\n  <article className=\"w-50 pa4 black-80 shadow-5 center flex flex-column pl-2\" >\r\n      <h1 >Sign in</h1>\r\n      <div style={{'color':'red'}}><strong id=\"error\"/></div>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\" >Email address</label>\r\n          <input className=\"pa2 input-reset ba bg-transparent measure w-70\"  id=\"email-address\" />\r\n        </div>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\">Password</label>\r\n          <input className=\"b pa2 input-reset ba bg-transparent w-70\"  id=\"password\" />\r\n        </div>\r\n      <div className=\"mt3\">\r\n        <button onClick={()=> signIn()} \r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n        type=\"submit\">Signin</button>\r\n      </div>\r\n  </article>\r\n  );\r\n}\r\nexport default Signin;","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport img from './image.jpg'\r\n\r\nconst Logo = ()=>{\r\n  return (\r\n    <Tilt className=\"Tilt br2 shadow-5 pa1 ma3\" options={{ max : 100 }} style={{ height: 130, width: 130,borderRadius: '30px'}} >\r\n \t<div className=\"Tilt-inner\"> <img width='130px'style={{borderRadius: '30px',}} alt = 'logo' src={img} /> </div>\r\n\t</Tilt>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\n\r\nclass Profile extends Component{\r\n\trender(){\r\n\t\treturn <div id='hello'>\r\n\t\t\t\tHello <b>{this.props.user.name}</b> thanks for your <b>{this.props.user.entries}th</b> entry!\r\n\t\t\t</div>;\r\n\t}\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles/imagePreview.css';\r\n\r\nexport const ImagePreview = ({ dataUri, isFullscreen }) => {\r\n  let classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\r\n\r\n  return (\r\n    <div className={'demo-image-preview ' + classNameFullscreen}>\r\n      <img src={dataUri} />\r\n    </div>\r\n  );\r\n};\r\n\r\nImagePreview.propTypes = {\r\n  dataUri: PropTypes.string,\r\n  isFullscreen: PropTypes.bool\r\n};\r\n\r\nexport default ImagePreview;\r\n","import React, { useState } from 'react';\r\nimport Camera from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport ImagePreview from './ImagePreview'; // source code : ./src/demo/AppWithImagePreview/ImagePreview\r\n\r\nfunction TakePic (props) {\r\n  const [dataUri, setDataUri] = useState('');\r\n  const [imgDone,setImgDone] = useState('');\r\n\r\n  function handleTakePhotoAnimationDone (dataUri) {\r\n    console.log('takePhoto');\r\n    // console.log(dataUri);\r\n    setDataUri(dataUri);\r\n    setImgDone(true);\r\n    //top 22 char are invalid\r\n    // const obj = { base64: dataUri.substring(22) }\r\n    const obj = { base64: dataUri }\r\n    props.onButtonFinishPic(obj)\r\n  }\r\n\r\n  const isFullscreen = false;\r\n\r\n  return (\r\n    <div>\r\n      { (imgDone)\r\n        ?<div> \r\n          <img src={dataUri} alt=''/>\r\n        </div>\r\n        : (\r\n        (dataUri)\r\n          ? <ImagePreview dataUri={dataUri}\r\n            isFullscreen={isFullscreen}\r\n          />\r\n          :<div>\r\n            <button onClick={props.onButtonBackHome} className=' grow  br5 ba'>❌</button> \r\n            <Camera onTakePhotoAnimationDone = {handleTakePhotoAnimationDone}\r\n              isFullscreen={isFullscreen}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TakePic;\r\n","import React from 'react';\r\nimport './ImgLinkForm.css'\r\n\r\nconst ImgLinkForm = ({onButtonTakePic, onInput , onButtonSubmit})=>{\r\n  return (\r\n    <div className=''>\r\n    \t<p className='center ph2'>Please type in the image URL that you want to detect</p>\r\n    \t<hr />\r\n    \t<div className='center shadow-2 pv3 ma1 br3 w-70' >\r\n        <button onClick={onButtonTakePic} className='w-15 mh2 dib grow white bg-light-purple br2 ba b--light-purple'>Take a photo</button>\r\n        <p className='f6 m5 ph2'>Or Copy a URL</p>\r\n\t    \t<input onInput={onInput} type='text'className = 'w-70  bw2' ></input>\r\n\t    \t<button onClick={onButtonSubmit} className='w-15 mh2 dib grow white bg-light-purple ph3 br2 ba b--light-purple'>Detect</button>\r\n\t    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgLinkForm;\r\n","import React from 'react';\r\nimport './Image.css'\r\n\r\nconst Image = ({ boundingBox, url })=>{\r\n\r\n  return (\r\n    <div className='center'>\r\n    \t<div className='absolute'>\r\n    \t\t{(url.length!==0)?\r\n    \t\t\t<img className='inputImg' width='300px' height='auto' alt = 'target' src={url} />\r\n    \t\t\t:<div />\r\n    \t\t}\r\n\t\t\t{(boundingBox.length !=0)?\r\n\t\t\t<div className='bounding-box' style={{top:boundingBox[0], \r\n\t\t    \tleft:boundingBox[1],\r\n\t\t    \tbottom:boundingBox[2], \r\n\t\t    \tright:boundingBox[3]}}>\r\n\t\t\t</div>\r\n\t\t\t:<div />\r\n\t\t\t}\r\n\t    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from 'react';\r\nimport Navigation from '../components/Navigation/Navigation.js';\r\nimport Register from '../components/Navigation/Register.js';\r\nimport Signin from '../components/Navigation/Signin.js';\r\nimport Logo from '../components/Logo/Logo.js';\r\nimport Profile from '../components/Profile/Profile.js';\r\nimport TakePic from '../components/TakePic/TakePic.js';\r\nimport ImgLinkForm from '../components/ImgLinkForm/ImgLinkForm.js';\r\nimport Image from '../components/Image/Image.js';\r\nimport Particles from 'react-particles-js';\r\nimport Clarifai from 'clarifai'\r\nimport 'tachyons';\r\nimport './App.css'\r\n\r\n//copy your api key here\r\nconst app = new Clarifai.App({\r\n apiKey: 'd6eea73651224ec8b4892e677d7a4f52'\r\n});\r\nconst particleParams = {\r\n\t    \"particles\": {\r\n\t        \"number\": {\r\n\t            \"value\": 100\r\n\t        },\r\n\t        \"size\": {\r\n\t            \"value\": 3\r\n\t        }\r\n\t    },\r\n\t    \"interactivity\": {\r\n\t        \"events\": {\r\n\t            \"onhover\": {\r\n\t                \"enable\": true,\r\n\t                \"mode\": \"repulse\"\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\nconst initialState = {\r\n\t\t\turl:'',\r\n\t\t\tbox:[],\r\n\t\t\troute:'register',\r\n\t\t\tuser:{\r\n\t\t\t\t\tid:\"\",\r\n\t\t\t\t\tname:\"\",\r\n\t\t\t\t\temail:\"\",\r\n\t\t\t\t\tpasswd:\"\",\r\n\t\t\t\t\tentries:0,\r\n\t\t\t\t\tdate : new Date()\r\n\t\t\t}\r\n\t}\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state=initialState\r\n\t\t}\r\n\t\r\n\r\n\tonButtonNav = (route) =>{\r\n\t\tif (route === 'home') this.setState(initialState)\r\n\t\tthis.setState({route:route});\r\n\t}\r\n\t//redundant functions\r\n\tonButtonTakePic = () => {\r\n\t\tthis.setState({route:'takingpic'})\r\n\t\tconsole.log(\"taking\")\r\n\t}\r\n\r\n\tonButtonBackHome = () => {\r\n\t\tif (this.state.user.email !== \"\"){\r\n\t\t\tthis.setState({route:'signedin'})\r\n\t\t}else{\r\n\t\t\tthis.setState({route:'home'})\r\n\t\t}\r\n\t\tconsole.log(this.state.route)\r\n\t}\r\n\r\n\tonButtonFinishPic = (Obj) =>{\r\n\t\tthis.setState({pic:Obj})\r\n\t\tif (this.state.user.id !== \"\"){\r\n\t\t\tthis.setState({route:'signedin'})\r\n\t\t}else{\r\n\t\t\tthis.setState({route:'home'})\r\n\t\t}\r\n\t\tthis.setState({url:Obj.base64})\r\n\t\tconsole.log(this.state.url)\r\n\t}\r\n\r\n\tcalculateBoxPos = ({top_row,left_col,bottom_row,right_col})=>{\r\n\t\tconst img = document.querySelector('.inputImg');\r\n\t\tconst width = Number(img.width);\r\n\t\tconst height = Number(img.height);\r\n\t\t//[41.32348785, 98.848272, 165.080531, 191.816391]\r\n\t\t// console.log([top_row*height, left_col*width, bottom_row*height, right_col*width])\r\n\t\treturn [top_row*height, \r\n\t\tleft_col*width, \r\n\t\theight - bottom_row*height, \r\n\t\twidth - right_col*width];\r\n\t}\r\n\r\n\tonButtonSubmit = () => {\r\n\t\t\tlet uri = this.state.url;\r\n\t\t\t//handle the pic took from the user\r\n\t\t\tif (uri.includes(\"base64\")){\r\n\t\t\t\turi = uri.substring(22);\r\n\t\t\t}\r\n\t      \t// app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", uri)\r\n\t       //  .then(response => {\r\n\t       //  //regions has two array\r\n\t       //  //{top_row: 0.110837825, left_col: 0.30422476, bottom_row: 0.48536083, right_col: 0.47590622}\r\n\t       //  const res = this.calculateBoxPos(response.outputs[0].data.regions[0].region_info.bounding_box)\r\n\t       //  this.displayBox(res);\r\n\t       //  })\r\n\t       //  .catch(err => {\r\n\t       //    console.log(err);\r\n\t       //  });\r\n\t\t    fetch(\"http://localhost:4000/image\",{\r\n\t\t      method:\"post\",\r\n\t\t      headers:{\r\n\t\t        'content-type': 'application/json'\r\n\t\t      },\r\n\r\n\t\t      body:JSON.stringify({\r\n\t\t\t\t\t\"uri\":uri\r\n\t\t      })\r\n\t\t    })\r\n\t        .then(response => response.json())\r\n\t        .then(response => {\r\n\t        //regions has two array\r\n\t        //{top_row: 0.110837825, left_col: 0.30422476, bottom_row: 0.48536083, right_col: 0.47590622}\r\n\t        const res = this.calculateBoxPos(response.outputs[0].data.regions[0].region_info.bounding_box)\r\n\t        this.displayBox(res);\r\n\t        })\r\n\t        .catch(err => {\r\n\t          console.log(err);\r\n\t        });\r\n\t  }\r\n\r\n\tdisplayBox = (box_arr) =>{\r\n\t\tthis.setState({box:box_arr})\r\n\t}\r\n\tonInput= (event) => {\r\n\t\tthis.setState({url:event.target.value})\r\n\t}\r\n\r\n\tonButtonSign = (user)=>{\r\n\t\tthis.setState(Object.assign(this.state.user,{name:user.name,email:user.email,id:user.id,date:user.date,entries:user.entries}))\r\n\t}\r\n\r\n\tgetProfile = ()=>{\r\n\t\tfetch(`http://localhost:4000/profile/${this.state.user.id}`)\r\n\t\t.then()\r\n\t}\r\n  render(){\r\n  \tconsole.log(this.state.route)\r\n  \tconsole.log(this.state.user)\r\n //  \tlet nav;\r\n\tif(this.state.route === 'register'){\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<Navigation onButtonNav={this.onButtonNav}/>\r\n\t\t\t<Register onButtonSign={this.onButtonSign} onButtonNav={this.onButtonNav}/>\r\n\t\t\t</div>);\r\n\t}\r\n\telse if(this.state.route === 'signin'){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<Navigation onButtonNav={this.onButtonNav}/>\r\n\t\t\t<Signin onButtonSign={this.onButtonSign} onButtonNav={this.onButtonNav}/>\r\n\t\t\t</div>);\r\n\t}\r\n\r\n  \treturn(\r\n  \t\t<div>{\r\n  \t\t\t(this.state.route === 'takingpic')\r\n  \t\t\t?<TakePic onButtonBackHome={this.onButtonBackHome} onButtonFinishPic={this.onButtonFinishPic}/>\r\n  \t\t\t:(this.state.route === 'home' || 'signedin')\r\n  \t\t\t?(\r\n  \t\t\t<div>\r\n\t  \t\t\t<Particles className='particles' params={particleParams} />\r\n\t\t    \t<Navigation onButtonNav={this.onButtonNav} route={this.state.route}/>\r\n\t\t    \t<Logo className='particles'/>\r\n\t\t    \t{(this.state.route === 'signedin')?\r\n\t\t    \t\t<div className='center grow'>\r\n\t\t    \t\t\t<Profile  user={this.state.user}/>\r\n\t\t    \t\t</div>\r\n\t\t    \t\t:<div />\r\n\t\t    \t}\r\n\t\t    \t<h1 className='center'> Smart Brain </h1>\r\n\t\t    \t<ImgLinkForm onButtonTakePic={this.onButtonTakePic} onInput={this.onInput} onButtonSubmit={this.onButtonSubmit}/>\r\n\t\t    \t<Image boundingBox={this.state.box} url={this.state.url} />\r\n\t    \t</div>\r\n\t    \t)\r\n\t    \t:<Image boundingBox={this.state.box} url={this.state.url} />\r\n  \t\t}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './container/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css'\r\nReactDOM.render(\r\n    <App />\r\n\t,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/image.e93d0377.jpg\";"],"sourceRoot":""}