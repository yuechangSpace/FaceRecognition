{"version":3,"sources":["components/Navigation/Navigation.js","components/Navigation/Register.js","components/Navigation/Signin.js","components/Logo/Logo.js","components/TakePic/ImagePreview/index.js","components/TakePic/TakePic.js","components/ImgLinkForm/ImgLinkForm.js","components/Image/Image.js","container/App.js","serviceWorker.js","index.js","components/Logo/image.jpg"],"names":["Navigation","signInNOut","onButtonNav","route","onClick","className","Register","action","method","id","type","name","Signin","props","Logo","options","max","style","height","width","borderRadius","alt","src","img","ImagePreview","dataUri","classNameFullscreen","isFullscreen","TakePic","useState","setDataUri","imgDone","setImgDone","onButtonBackHome","onTakePhotoAnimationDone","console","log","obj","base64","onButtonFinishPic","ImgLinkForm","onButtonTakePic","onInput","onButtonSubmit","Image","boundingBox","url","top","left","bottom","right","app","Clarifai","App","apiKey","particleParams","setState","state","Obj","pic","calculateBoxPos","top_row","left_col","bottom_row","right_col","document","querySelector","Number","uri","includes","substring","models","predict","then","response","res","outputs","data","regions","region_info","bounding_box","displayBox","catch","err","box_arr","box","event","target","value","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.81c35dd1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onButtonNav, route})=>{\r\n\tlet signInNOut;\r\n\tif (route === 'signedin'){\r\n\t\tsignInNOut = <p onClick={()=>onButtonNav('home')} className='grow mh3'>Sign Out </p>\r\n\t}else{\r\n\t\tsignInNOut = <p onClick={()=>onButtonNav('signin')} className='grow mh3'>Sign In </p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav  className='ma1 pa2 pointer end'>\r\n\t\t<p onClick={()=>onButtonNav('register')} className='grow mh3'>Register</p>\r\n\t\t{signInNOut}\r\n\t\t</nav>\r\n\t\t);\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nconst Register =({onButtonNav})=>{\r\n  return(\r\n  <article className=\"w-50 pa4 black-80 shadow-5 center flex flex-column pl-2\" >\r\n      <h1 >Register</h1>\r\n      <form action=\"sign-up_submit\" method=\"get\">\r\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n        <legend className=\"ph0 mh0 fw6 clip\">Sign Up</legend>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\">Email address</label>\r\n          <input className=\"pa2 input-reset ba bg-transparent measure w-70\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n        </div>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\">Password</label>\r\n          <input className=\"b pa2 input-reset ba bg-transparent w-70\" type=\"password\" name=\"password\"  id=\"password\" />\r\n        </div>\r\n      </fieldset>\r\n      <button onClick={()=>onButtonNav('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 mt3\" >Register</button>\r\n      </form>\r\n  </article>\r\n  );\r\n}\r\nexport default Register;","import React from 'react';\r\nconst Signin =(props)=>{\r\n  return(\r\n  <article className=\"w-50 pa4 black-80 shadow-5 center flex flex-column pl-2\" >\r\n      <h1 >Signin</h1>\r\n      <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n        <legend className=\"ph0 mh0 fw6 clip\">Sign Up</legend>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\" >Email address</label>\r\n          <input className=\"pa2 input-reset ba bg-transparent measure w-70\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n        </div>\r\n        <div className=\"mt3\">\r\n          <label className=\"db fw4 lh-copy f6\">Password</label>\r\n          <input className=\"b pa2 input-reset ba bg-transparent w-70\" type=\"password\" name=\"password\"  id=\"password\" />\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"mt3\">\r\n        <button onClick={()=> props.onButtonNav('signedin')} \r\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" \r\n        type=\"submit\">Signin</button>\r\n      </div>\r\n  </article>\r\n  );\r\n}\r\nexport default Signin;","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport img from './image.jpg'\r\n\r\nconst Logo = ()=>{\r\n  return (\r\n    <Tilt className=\"Tilt br2 shadow-5 pa1 ma3\" options={{ max : 100 }} style={{ height: 130, width: 130,borderRadius: '30px'}} >\r\n \t<div className=\"Tilt-inner\"> <img width='130px'style={{borderRadius: '30px',}} alt = 'logo' src={img} /> </div>\r\n\t</Tilt>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/imagePreview.css';\n\nexport const ImagePreview = ({ dataUri, isFullscreen }) => {\n  let classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\n\n  return (\n    <div className={'demo-image-preview ' + classNameFullscreen}>\n      <img src={dataUri} />\n    </div>\n  );\n};\n\nImagePreview.propTypes = {\n  dataUri: PropTypes.string,\n  isFullscreen: PropTypes.bool\n};\n\nexport default ImagePreview;\n","import React, { useState } from 'react';\r\nimport Camera from 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport ImagePreview from './ImagePreview'; // source code : ./src/demo/AppWithImagePreview/ImagePreview\r\n\r\nfunction TakePic (props) {\r\n  const [dataUri, setDataUri] = useState('');\r\n  const [imgDone,setImgDone] = useState('');\r\n\r\n  function handleTakePhotoAnimationDone (dataUri) {\r\n    console.log('takePhoto');\r\n    // console.log(dataUri);\r\n    setDataUri(dataUri);\r\n    setImgDone(true);\r\n    //top 22 char are invalid\r\n    // const obj = { base64: dataUri.substring(22) }\r\n    const obj = { base64: dataUri }\r\n    props.onButtonFinishPic(obj)\r\n  }\r\n\r\n  const isFullscreen = false;\r\n\r\n  return (\r\n    <div>\r\n      { (imgDone)\r\n        ?<div> \r\n          <img src={dataUri} alt=''/>\r\n        </div>\r\n        : (\r\n        (dataUri)\r\n          ? <ImagePreview dataUri={dataUri}\r\n            isFullscreen={isFullscreen}\r\n          />\r\n          :<div>\r\n            <button onClick={props.onButtonBackHome} className=' grow  br5 ba'>❌</button> \r\n            <Camera onTakePhotoAnimationDone = {handleTakePhotoAnimationDone}\r\n              isFullscreen={isFullscreen}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TakePic;\r\n","import React from 'react';\r\nimport './ImgLinkForm.css'\r\n\r\nconst ImgLinkForm = ({onButtonTakePic, onInput , onButtonSubmit})=>{\r\n  return (\r\n    <div className=''>\r\n    \t<p className='center ph2'>Please type in the image URL that you want to detect</p>\r\n    \t<hr />\r\n    \t<div className='center shadow-2 pv3 ma1 br3 w-70' >\r\n        <button onClick={onButtonTakePic} className='w-15 mh2 dib grow white bg-light-purple br2 ba b--light-purple'>Take a photo</button>\r\n        <p className='f6 m5 ph2'>Or Copy a URL</p>\r\n\t    \t<input onInput={onInput} type='text'className = 'w-70  bw2' ></input>\r\n\t    \t<button onClick={onButtonSubmit} className='w-15 mh2 dib grow white bg-light-purple ph3 br2 ba b--light-purple'>Detect</button>\r\n\t    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImgLinkForm;\r\n","import React from 'react';\r\nimport './Image.css'\r\n\r\nconst Image = ({ boundingBox, url })=>{\r\n\r\n  return (\r\n    <div className='center'>\r\n    \t<div className='absolute'>\r\n\t\t    <img className='inputImg' width='300px' height='auto' alt = 'target' src={url} />\r\n\t\t    <div className='bounding-box' style={{top:boundingBox[0], \r\n\t\t    \tleft:boundingBox[1],\r\n\t\t    \tbottom:boundingBox[2], \r\n\t\t    \tright:boundingBox[3]}}>\r\n\t\t\t</div>\r\n\t    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from 'react';\nimport Navigation from '../components/Navigation/Navigation.js';\nimport Register from '../components/Navigation/Register.js';\nimport Signin from '../components/Navigation/Signin.js';\nimport Logo from '../components/Logo/Logo.js';\nimport TakePic from '../components/TakePic/TakePic.js';\nimport ImgLinkForm from '../components/ImgLinkForm/ImgLinkForm.js';\nimport Image from '../components/Image/Image.js';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\nimport 'tachyons';\nimport './App.css'\n\n//copy your api key here\nconst app = new Clarifai.App({\n apiKey: 'd6eea73651224ec8b4892e677d7a4f52'\n});\nconst particleParams = {\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 3\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n\t};\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\turl:'',\n\t\t\tbox:[],\n\t\t\troute:'register',\n\t\t\tpic:{}\n\t\t}\n\t}\n\tonButtonNav = (route) =>{\n\t\tconsole.log(route)\n\t\tthis.setState({route:route});\n\t}\n\t//redundant functions\n\tonButtonTakePic = () => {\n\t\tthis.setState({route:'takingpic'})\n\t\tconsole.log(\"taking\")\n\t}\n\n\tonButtonBackHome = () => {\n\t\tthis.setState({route:'home'})\n\t\tconsole.log(this.state.route)\n\t}\n\n\tonButtonFinishPic = (Obj) =>{\n\t\tthis.setState({pic:Obj})\n\t\tthis.setState({route:'home'})\n\t\tthis.setState({url:Obj.base64})\n\t\tconsole.log(this.state.url)\n\t}\n\n\tcalculateBoxPos = ({top_row,left_col,bottom_row,right_col})=>{\n\t\tconst img = document.querySelector('.inputImg');\n\t\tconst width = Number(img.width);\n\t\tconst height = Number(img.height);\n\t\t//[41.32348785, 98.848272, 165.080531, 191.816391]\n\t\t// console.log([top_row*height, left_col*width, bottom_row*height, right_col*width])\n\t\treturn [top_row*height, \n\t\tleft_col*width, \n\t\theight - bottom_row*height, \n\t\twidth - right_col*width];\n\t}\n\n\tonButtonSubmit = () => {\n\t\t\tlet uri = this.state.url;\n\t\t\t//handle the pic took from the user\n\t\t\tif (uri.includes(\"base64\")){\n\t\t\t\turi = uri.substring(22);\n\t\t\t}\n\t      \tapp.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", uri)\n\t        .then(response => {\n\t        //regions has two array\n\t        //{top_row: 0.110837825, left_col: 0.30422476, bottom_row: 0.48536083, right_col: 0.47590622}\n\t        const res = this.calculateBoxPos(response.outputs[0].data.regions[0].region_info.bounding_box)\n\t        this.displayBox(res);\n\t        })\n\t        .catch(err => {\n\t          console.log(err);\n\t        });\n\t  }\n\n\tdisplayBox = (box_arr) =>{\n\t\tthis.setState({box:box_arr})\n\t}\n\tonInput= (event) => {\n\t\tthis.setState({url:event.target.value})\n\t}\n\n  render(){\n  \tconsole.log(this.state.route)\n //  \tlet nav;\n\tif(this.state.route === 'register'){\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Navigation onButtonNav={this.onButtonNav}/>\n\t\t\t<Register onButtonNav={this.onButtonNav}/>\n\t\t\t</div>);\n\t}\n\telse if(this.state.route === 'signin'){\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Navigation onButtonNav={this.onButtonNav}/>\n\t\t\t<Signin onButtonNav={this.onButtonNav}/>\n\t\t\t</div>);\n\t}\n\n  \treturn(\n  \t\t<div>{\n  \t\t\t(this.state.route === 'takingpic')\n  \t\t\t?<TakePic onButtonBackHome={this.onButtonBackHome} onButtonFinishPic={this.onButtonFinishPic}/>\n  \t\t\t:(this.state.route === 'home' || 'signedin')\n  \t\t\t?(\n  \t\t\t<div>\n\t  \t\t\t<Particles className='particles' params={particleParams} />\n\t\t    \t<Navigation onButtonNav={this.onButtonNav} route={this.state.route}/>\n\t\t    \t<Logo className='particles'/>\n\t\t    \t<h1 className='center'> Smart Brain </h1>\n\t\t    \t<ImgLinkForm onButtonTakePic={this.onButtonTakePic} onInput={this.onInput} onButtonSubmit={this.onButtonSubmit}/>\n\t\t    \t<Image boundingBox={this.state.box} url={this.state.url} />\n\t    \t</div>\n\t    \t)\n\t    \t:<Image boundingBox={this.state.box} url={this.state.url} />\n  \t\t}\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css'\nReactDOM.render(\n    <App />\n\t,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image.e93d0377.jpg\";"],"sourceRoot":""}